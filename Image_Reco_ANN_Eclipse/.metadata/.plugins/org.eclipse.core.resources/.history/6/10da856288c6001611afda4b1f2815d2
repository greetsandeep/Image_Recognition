package artificialneuralnetworks;

import java.io.*;
import java.util.*;

/**
 * @author Snehal, Sandeep
 * Provides a way to read PGM files. 
 */
public class PGMReader {

	/**
	 * @param filename : Name of the PGM file to be parsed.
	 * @return a 2D double array where each double has the gray-scale value (normalised) of the pixel and size of array being 
	 * 			equal to the size of the image in the PGM file. 
	 * @throws IOException
	 */
	
	double[][] readImage(String filename) throws IOException {
		BufferedReader br = new BufferedReader(new FileReader(filename));
		String magic = br.readLine();
		String size = br.readLine();
		while(size.startsWith("#")){
			size = br.readLine();
		}
		Scanner s = new Scanner(size);
		int columns = s.nextInt();
		int rows = s.nextInt();
		s.close();
		String line = br.readLine();
		s = new Scanner(line);
		s.nextInt(); //Skipping the max value mentioned in the PGM Encoding
		double image[][] = new double[rows][columns];
		if("P5".equals(magic)){
			FileInputStream img = new FileInputStream(filename);
			File forLength = new File(filename);
			long length = forLength.length();
			long skip = length - rows*columns;
			img.skip(skip);
			for(int i=0;i<rows;i++){
				for(int j=0;j<columns;j++){
					image[i][j] = (double)img.read()/255.0;
				}
			}
			img.close();
		}
		else{
			System.out.println(filename);
			// Did this change couldn't see any filename. Thus all files are P5.
		}
		s.close();
		br.close();

		return image;
	}
}
